name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          environment-name: discord_reddit_bot

      - name: Run Tests
        shell: bash -el {0}
        env:
          NEW_POSTS: "100"
        run: |
          micromamba activate discord_reddit_bot
          python -m pytest test_reddit_moniter.py

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/seraph-docker2:latest
          
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/seraph-docker2:latest
            docker stop discord-bot || true
            docker rm discord-bot || true
            docker run -d \
              --name discord-bot \
              --restart unless-stopped \
              -e DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }} \
              -e REDDIT_CLIENT_ID=${{ secrets.REDDIT_CLIENT_ID }} \
              -e REDDIT_SECRET=${{ secrets.REDDIT_SECRET }} \
              -e CHANNEL_ID=${{ secrets.CHANNEL_ID }} \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/seraph-docker2:latest